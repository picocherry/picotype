#!/bin/bash

# Check if typeface name is provided
if [ -z "$1" ]; then
    echo "Error: Please provide the typeface name as an argument"
    echo "Usage: $0 <typeface-name>"
    echo "Example: $0 picotype"
    exit 1
fi

TYPEFACE_NAME="$1"

# Directory containing the original fonts
FONT_DIR="./src/$TYPEFACE_NAME"
# Directory for output
OUTPUT_DIR="./build/generated/nerd/$TYPEFACE_NAME"

# Check if font directory exists
if [ ! -d "$FONT_DIR" ]; then
    echo "Error: Font directory not found at $FONT_DIR"
    exit 1
fi

# Check if font-patcher exists
if [ ! -f "./patcher/font-patcher" ]; then
    echo "Error: font-patcher script not found in patcher directory"
    exit 1
fi

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Process each variant explicitly
for variant in "regular" "bold" "black"; do
    variant_dir="$FONT_DIR/$variant"
    if [ -d "$variant_dir" ]; then
        echo "Processing variant: $variant"
        
        # Look for both TTF and OTF files
        for ext in "ttf" "otf"; do
            font_file="$variant_dir/$TYPEFACE_NAME-$variant.$ext"
            if [ -f "$font_file" ]; then
                echo "Found font file: $font_file"
                filename=$(basename "$font_file")
                base_name="${filename%.*}"
                extension="${filename##*.}"
                output_name="${TYPEFACE_NAME}nerd-$variant.${extension}"
                
                echo "Processing $filename..."
                
                # Run font-patcher with the specified options
                fontforge --script ./patcher/font-patcher \
                    --careful \
                    --mono \
                    --complete \
                    --makegroups 0 \
                    --outputdir "$OUTPUT_DIR" \
                    "$font_file"
                    
                if [ $? -eq 0 ]; then
                    # Rename the output file to match our naming convention
                    patched_file="$OUTPUT_DIR/${TYPEFACE_NAME}NerdFontMono-${variant}.$extension"
                    if [ -f "$patched_file" ]; then
                        mv "$patched_file" "$OUTPUT_DIR/$output_name"
                        echo "Successfully generated $output_name"
                    else
                        echo "Error: Patched file not found at $patched_file"
                    fi
                else
                    echo "Error processing $filename"
                fi
            else
                echo "No $ext file found at $font_file"
            fi
        done
    else
        echo "Warning: Variant directory $variant not found"
    fi
done

echo "All fonts have been processed!" 