#!/bin/bash

# Check if typeface name is provided
if [ -z "$1" ]; then
    echo "Error: Please provide the typeface name as an argument"
    echo "Usage: $0 <typeface-name>"
    echo "Example: $0 picosans"
    exit 1
fi

TYPEFACE_NAME="$1"

# Directory containing the original fonts
FONT_DIR="./build/$TYPEFACE_NAME"
# Directory for output
OUTPUT_DIR="./build/${TYPEFACE_NAME}nerd"

# Check if font directory exists
if [ ! -d "$FONT_DIR" ]; then
    echo "Error: Font directory not found at $FONT_DIR"
    exit 1
fi

# Check if font-patcher exists
if [ ! -f "./patcher/font-patcher" ]; then
    echo "Error: font-patcher script not found in patcher directory"
    exit 1
fi

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Process each variant based on filenames
echo "Found variants:"
ls "$FONT_DIR"/*.ttf 2>/dev/null | while read -r font_file; do
    filename=$(basename "$font_file")
    base_name="${filename%.*}"
    
    # Extract variant from filename (e.g., picosans-regular.ttf -> regular)
    variant=$(echo "$base_name" | sed "s/$TYPEFACE_NAME-//")
    echo "Processing variant: $variant"
    
    echo "Processing $filename..."
    
    # Run font-patcher with the specified options
    fontforge --script ./patcher/font-patcher \
        --careful \
        --mono \
        -q \
        --simple \
        --complete \
        --makegroups 0 \
        --outputdir "$OUTPUT_DIR" \
        "$font_file"
        
    if [ $? -eq 0 ]; then
        # The patched file will be created with the default name including the variant
        default_patched_file="$OUTPUT_DIR/${TYPEFACE_NAME}NerdFontMono-$variant.ttf"
        # Our desired output name
        output_name="${TYPEFACE_NAME}nerd-$variant.ttf"
        
        echo "Looking for patched file at: $default_patched_file"
        if [ -f "$default_patched_file" ]; then
            # Rename to our desired naming convention
            mv "$default_patched_file" "$OUTPUT_DIR/$output_name"
            echo "Successfully generated $output_name"
        else
            echo "Error: Patched file not found at $default_patched_file"
            # List contents of output directory to help debug
            echo "Contents of $OUTPUT_DIR:"
            ls -la "$OUTPUT_DIR"
        fi
    else
        echo "Error processing $filename"
    fi
done

echo "All fonts have been processed!" 